"use strict";

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var App = /*#__PURE__*/function () {
  function App() {
    _classCallCheck(this, App);

    var BREAKPOINTS = {
      'XS': 576,
      'SM': 769,
      'MD': 992,
      'LG': 1220
    };
    var HEADER_OFFSET = {
      'XS': 70,
      'MD': 80,
      'LG': 90,
      'XL': 100
    };
    var windowWidth = 0;
    var isSM = false;
    var headerMenu = new HeaderMenu();
    var scrollTo = new ScrollTo();

    window.onresize = function () {
      windowWidth = this.innerWidth;
      if (windowWidth < BREAKPOINTS.XS) scrollTo.setOffset = HEADER_OFFSET.XS;else if (windowWidth < BREAKPOINTS.MD) scrollTo.setOffset = HEADER_OFFSET.MD;else if (windowWidth < BREAKPOINTS.LG) scrollTo.setOffset = HEADER_OFFSET.LG;else scrollTo.setOffset = HEADER_OFFSET.XL;

      if (windowWidth < BREAKPOINTS.SM) {
        isSM = false;
      }

      if (windowWidth >= BREAKPOINTS.SM) {
        if (!isSM) headerMenu.hide();
        isSM = true;
      }
    };

    window.dispatchEvent(new Event('resize'));

    this._heroAnimate();

    this._formFile();

    this._formRange();
  }

  _createClass(App, [{
    key: "_heroAnimate",
    value: function _heroAnimate() {
      document.querySelector('.hero').classList.add('hero--animated');
    }
  }, {
    key: "_formFile",
    value: function _formFile() {
      var _this = this;

      var iconEl = '<i class="form__file-icon"></i>';
      var buttonEls = document.querySelectorAll('.form__file-button');
      var fileEls = document.querySelectorAll('.form__file');
      buttonEls.forEach(function (el) {
        return el.addEventListener('click', function (e) {
          e.preventDefault();
          el.parentNode.querySelector('.form__file').click();
        });
      });
      fileEls.forEach(function (el) {
        return el.addEventListener('change', function () {
          if (!_this.files.length) return;
          var buttonEl = el.parentNode.querySelector('.form__file-button');
          buttonEl.innerHTML = iconEl + _this.files[0].name;
          buttonEl.classList.add('form__file--changed');
        });
      });
    }
  }, {
    key: "_formRange",
    value: function _formRange() {
      var rangeEls = document.querySelectorAll('.form__range');

      var onInput = function onInput(el) {
        var percentEl = el.parentNode.querySelector('.form__range-percent');
        percentEl.textContent = el.value + '%';
      };

      rangeEls.forEach(function (el) {
        el.addEventListener('input', function () {
          onInput(el);
        });
        onInput(el);
      });
    }
  }]);

  return App;
}();

window.addEventListener('load', function () {
  new App();
});
"use strict";

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var HeaderMenu = /*#__PURE__*/function () {
  function HeaderMenu() {
    var _this = this;

    _classCallCheck(this, HeaderMenu);

    // Классы
    this.menuClass = 'header__menu';
    this.menuActiveClass = this.menuClass + '--active';
    this.menuToggleClass = 'header__menu-toggle';
    this.menuToggleActiveClass = this.menuToggleClass + '--active';
    this.menuItemClass = 'header__menu-item'; // Элементы

    this.menuEl = document.querySelector('.' + this.menuClass);
    this.menuItemsEl = document.querySelectorAll('.' + this.menuItemClass);
    this.menuToggleEl = document.querySelector('.' + this.menuToggleClass); // События

    this.menuToggleEl.addEventListener('click', function () {
      _this.toggle(_this.menuActiveClass, _this.menuToggleActiveClass);
    });
    this.menuItemsEl.forEach(function (el) {
      return el.addEventListener('click', function () {
        _this.hide();
      });
    }); // Overlay init

    this.overlay = new Overlay([this.menuActiveClass, this.menuToggleActiveClass]);
  }

  _createClass(HeaderMenu, [{
    key: "toggle",
    value: function toggle() {
      this.menuEl.classList.toggle(this.menuActiveClass);
      this.menuToggleEl.classList.toggle(this.menuToggleActiveClass);
      this.overlay.toggle();
    }
  }, {
    key: "show",
    value: function show() {
      if (!this.menuEl.classList.contains(this.menuActiveClass)) this.toggle();
    }
  }, {
    key: "hide",
    value: function hide() {
      if (this.menuEl.classList.contains(this.menuActiveClass)) this.toggle();
    }
  }]);

  return HeaderMenu;
}();
"use strict";

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var Overlay = /*#__PURE__*/function () {
  function Overlay(hideElementsClasses) {
    var _this = this;

    _classCallCheck(this, Overlay);

    // Классы
    this.overlayClass = 'overlay';
    this.overlayActiveClass = this.overlayClass + '--active';
    this.bodyClass = 'body';
    this.bodyFixedClass = this.bodyClass + '--fixed'; // Элементы

    this.bodyEl = document.querySelector('.' + this.bodyClass);
    this.overlayEl = document.querySelector('.' + this.overlayClass); // События

    this.overlayEl.addEventListener('click', function () {
      _this.hide();

      if (hideElementsClasses.length) {
        for (var i = 0; i < hideElementsClasses.length; i++) {
          document.getElementsByClassName(hideElementsClasses[i])[0].classList.remove(hideElementsClasses[i]);
        }
      }
    });
  }

  _createClass(Overlay, [{
    key: "toggle",
    value: function toggle() {
      this.overlayEl.classList.toggle(this.overlayActiveClass);
      this.bodyEl.classList.toggle(this.bodyFixedClass);
    }
  }, {
    key: "show",
    value: function show() {
      if (!this.overlayEl.classList.contains(this.overlayActiveClass)) this.toggle();
    }
  }, {
    key: "hide",
    value: function hide() {
      if (this.overlayEl.classList.contains(this.overlayActiveClass)) this.toggle();
    }
  }]);

  return Overlay;
}();
"use strict";

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var ScrollTo = /*#__PURE__*/function () {
  function ScrollTo() {
    _classCallCheck(this, ScrollTo);

    var self = this;
    this.offset = 0;
    var linksEl = document.querySelectorAll('a[href^="#"]');
    linksEl.forEach(function (el) {
      return el.addEventListener('click', function (e) {
        e.preventDefault();
        var y = 0;
        var id = e.target.hash.substr(1);
        if (id) y = document.getElementById(id).getBoundingClientRect().top + window.scrollY;
        window.scroll({
          top: y - self.offset,
          behavior: 'smooth'
        });
      });
    });
  }

  _createClass(ScrollTo, [{
    key: "setOffset",
    set: function set(offset) {
      this.offset = offset;
    }
  }]);

  return ScrollTo;
}();
"use strict";